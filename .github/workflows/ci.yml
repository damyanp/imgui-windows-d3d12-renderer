name: ci
on:
  pull_request:
  push:
    branches:
      - main

jobs:
  rustfmt:
    name: Check rustfmt
    runs-on: windows-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - run: cargo fmt --all -- --check

  clippy:
    name: Run linter
    runs-on: windows-latest
    if: github.ref == 'refs/heads/main'
    env:
      RUSTFLAGS: -D warnings
      RUSTDOCFLAGS: -D warnings
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: hecrj/setup-rust-action@v1
        with:
          components: clippy
      - name: Cache cargo directories
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}
            ${{ runner.os }}-cargo-
      - name: Cache cargo target dirs
        uses: actions/cache@v2
        with:
          path: target
          key: ${{ runner.os }}-target-lint-stable-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: |
            ${{ runner.os }}-target-lint-stable-${{ hashFiles('**/Cargo.toml') }}
            ${{ runner.os }}-target-lint-stable-
            ${{ runner.os }}-target-lint-

      - name: no features
        run: cargo clippy --workspace --all-targets

  test:
    name: Run tests
    runs-on: windows-latest
    env:
      RUSTFLAGS: -D warnings
      RUST_BACKTRACE: 1
    strategy:
      fail-fast: false
      matrix:
        rust:
          - "1.70"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
      - name: Cache cargo directories
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}
            ${{ runner.os }}-cargo-
      - name: Cache cargo target dirs
        uses: actions/cache@v2
        with:
          path: target
          # note `cargo test` and `cargo clippy` don't use the same build
          # artifacts, so this has a different key
          key: ${{ runner.os }}-target-test-${{ matrix.rust }}-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: |
            ${{ runner.os }}-target-test-${{ matrix.rust }}-${{ hashFiles('**/Cargo.toml') }}
            ${{ runner.os }}-target-test-${{ matrix.rust }}-

      - name: no features
        run: cargo test --workspace --all-targets

      - run: cargo test --workspace --doc

      # run to check for lint problems
      - name: build documentation
        run: cargo doc
